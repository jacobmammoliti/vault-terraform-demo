global:
  tlsDisable: ${tls_disable}
server:
  image:
    repository: ${vault_image_repository}
    tag: ${vault_image_tag}
  auditStorage:
    enabled: ${vault_enable_audit}
  ha:
    enabled: true
    replicas: ${replicas}
    apiAddr: "https://$(VAULT_K8S_POD_NAME).vault-internal"
    raft:
      enabled: true
      setNodeId: true

      config: |
        ui = ${vault_ui}

        log_level = "Debug"
        
        listener "tcp" {
          tls_disable        = ${tls_disable}
          %{ if tls_disable == false }
          tls_cert_file      = "/vault/userconfig/tls/tls.crt"
          tls_key_file       = "/vault/userconfig/tls/tls.key"
          %{ endif }
          address         = "[::]:8200"
          cluster_address = "[::]:8201"
        }

        storage "raft" {
          path = "/vault/data"

          retry_join {
            auto_join = "provider=k8s namespace=${vault_namespace} label_selector=\"component=server,app.kubernetes.io/name=vault\""
            leader_tls_servername = "HOSTNAME.vault-internal"
            leader_ca_cert_file   = "/vault/userconfig/tls-ca/ca.crt"
          }
        }

        %{ if kms_key_ring != "" }
        seal "gcpckms" {
          project     = "${kms_project_id}"
          region      = "${kms_region}"
          key_ring    = "${kms_key_ring}"
          crypto_key  = "${kms_crypto_key}"
        }
        %{ endif }

        service_registration "kubernetes" {}
  %{ if tls_disable == false }
  extraVolumes:
    - type: secret
      name: ${vault_tls_secret_name}
    - type: secret
      name: ${vault_tls_ca_secret_name}
  extraEnvironmentVars:
    VAULT_CAPATH: /vault/userconfig/tls-ca/ca.crt
    VAULT_ADDR: https://$(VAULT_K8S_POD_NAME).vault-internal:8200
  %{ endif }
ui:
  enabled: ${vault_ui}
  serviceType: ${vault_service_type}